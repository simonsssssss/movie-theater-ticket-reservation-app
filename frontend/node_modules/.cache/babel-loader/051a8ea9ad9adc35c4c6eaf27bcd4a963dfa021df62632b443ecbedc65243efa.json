{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { ApolloClient } from \"../../core/index.js\";\nimport { InMemoryCache as Cache } from \"../../cache/index.js\";\nimport { ApolloProvider } from \"../../react/context/index.js\";\nimport { MockLink } from \"../core/index.js\";\nvar MockedProvider = /** @class */function (_super) {\n  __extends(MockedProvider, _super);\n  function MockedProvider(props) {\n    var _this = _super.call(this, props) || this;\n    var _a = _this.props,\n      mocks = _a.mocks,\n      addTypename = _a.addTypename,\n      defaultOptions = _a.defaultOptions,\n      cache = _a.cache,\n      resolvers = _a.resolvers,\n      link = _a.link,\n      showWarnings = _a.showWarnings,\n      _b = _a.connectToDevTools,\n      connectToDevTools = _b === void 0 ? false : _b;\n    var client = new ApolloClient({\n      cache: cache || new Cache({\n        addTypename: addTypename\n      }),\n      defaultOptions: defaultOptions,\n      connectToDevTools: connectToDevTools,\n      link: link || new MockLink(mocks || [], addTypename, {\n        showWarnings: showWarnings\n      }),\n      resolvers: resolvers\n    });\n    _this.state = {\n      client: client\n    };\n    return _this;\n  }\n  MockedProvider.prototype.render = function () {\n    var _a = this.props,\n      children = _a.children,\n      childProps = _a.childProps;\n    var client = this.state.client;\n    return React.isValidElement(children) ? React.createElement(ApolloProvider, {\n      client: client\n    }, React.cloneElement(React.Children.only(children), __assign({}, childProps))) : null;\n  };\n  MockedProvider.prototype.componentWillUnmount = function () {\n    // Since this.state.client was created in the constructor, it's this\n    // MockedProvider's responsibility to terminate it.\n    this.state.client.stop();\n  };\n  MockedProvider.defaultProps = {\n    addTypename: true\n  };\n  return MockedProvider;\n}(React.Component);\nexport { MockedProvider };","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","Cache","ApolloProvider","MockLink","MockedProvider","_super","__extends","props","_this","call","_a","mocks","addTypename","defaultOptions","cache","resolvers","link","showWarnings","_b","connectToDevTools","client","state","prototype","render","children","childProps","isValidElement","createElement","cloneElement","Children","only","__assign","componentWillUnmount","stop","defaultProps","Component"],"sources":["C:\\Users\\Simon\\IdeaProjects\\movie-theater-ticket-reservation\\frontend\\node_modules\\@apollo\\src\\testing\\react\\MockedProvider.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport type { DefaultOptions } from \"../../core/index.js\";\nimport { ApolloClient } from \"../../core/index.js\";\nimport { InMemoryCache as Cache } from \"../../cache/index.js\";\nimport { ApolloProvider } from \"../../react/context/index.js\";\nimport type { MockedResponse } from \"../core/index.js\";\nimport { MockLink } from \"../core/index.js\";\nimport type { ApolloLink } from \"../../link/core/index.js\";\nimport type { Resolvers } from \"../../core/index.js\";\nimport type { ApolloCache } from \"../../cache/index.js\";\n\nexport interface MockedProviderProps<TSerializedCache = {}> {\n  mocks?: ReadonlyArray<MockedResponse<any, any>>;\n  addTypename?: boolean;\n  defaultOptions?: DefaultOptions;\n  cache?: ApolloCache<TSerializedCache>;\n  resolvers?: Resolvers;\n  childProps?: object;\n  children?: any;\n  link?: ApolloLink;\n  showWarnings?: boolean;\n  /**\n   * If set to true, the MockedProvider will try to connect to the Apollo DevTools.\n   * Defaults to false.\n   */\n  connectToDevTools?: boolean;\n}\n\nexport interface MockedProviderState {\n  client: ApolloClient<any>;\n}\n\nexport class MockedProvider extends React.Component<\n  MockedProviderProps,\n  MockedProviderState\n> {\n  public static defaultProps: MockedProviderProps = {\n    addTypename: true,\n  };\n\n  constructor(props: MockedProviderProps) {\n    super(props);\n\n    const {\n      mocks,\n      addTypename,\n      defaultOptions,\n      cache,\n      resolvers,\n      link,\n      showWarnings,\n      connectToDevTools = false,\n    } = this.props;\n    const client = new ApolloClient({\n      cache: cache || new Cache({ addTypename }),\n      defaultOptions,\n      connectToDevTools,\n      link: link || new MockLink(mocks || [], addTypename, { showWarnings }),\n      resolvers,\n    });\n\n    this.state = {\n      client,\n    };\n  }\n\n  public render() {\n    const { children, childProps } = this.props;\n    const { client } = this.state;\n\n    return React.isValidElement(children) ?\n        <ApolloProvider client={client}>\n          {React.cloneElement(React.Children.only(children), { ...childProps })}\n        </ApolloProvider>\n      : null;\n  }\n\n  public componentWillUnmount() {\n    // Since this.state.client was created in the constructor, it's this\n    // MockedProvider's responsibility to terminate it.\n    this.state.client.stop();\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,IAAIC,KAAK,QAAQ,sBAAsB;AAC7D,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,SAASC,QAAQ,QAAQ,kBAAkB;AA0B3C,IAAAC,cAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAQlC,SAAAD,eAAYG,KAA0B;IACpC,IAAAC,KAAA,GAAAH,MAAK,CAAAI,IAAA,OAACF,KAAK,CAAC;IAEN,IAAAG,EAAA,GASFF,KAAI,CAACD,KAAK;MARZI,KAAK,GAAAD,EAAA,CAAAC,KAAA;MACLC,WAAW,GAAAF,EAAA,CAAAE,WAAA;MACXC,cAAc,GAAAH,EAAA,CAAAG,cAAA;MACdC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;MACLC,SAAS,GAAAL,EAAA,CAAAK,SAAA;MACTC,IAAI,GAAAN,EAAA,CAAAM,IAAA;MACJC,YAAY,GAAAP,EAAA,CAAAO,YAAA;MACZC,EAAA,GAAAR,EAAA,CAAAS,iBAAyB;MAAzBA,iBAAiB,GAAAD,EAAA,cAAG,KAAK,GAAAA,EACb;IACd,IAAME,MAAM,GAAG,IAAIrB,YAAY,CAAC;MAC9Be,KAAK,EAAEA,KAAK,IAAI,IAAIb,KAAK,CAAC;QAAEW,WAAW,EAAAA;MAAA,CAAE,CAAC;MAC1CC,cAAc,EAAAA,cAAA;MACdM,iBAAiB,EAAAA,iBAAA;MACjBH,IAAI,EAAEA,IAAI,IAAI,IAAIb,QAAQ,CAACQ,KAAK,IAAI,EAAE,EAAEC,WAAW,EAAE;QAAEK,YAAY,EAAAA;MAAA,CAAE,CAAC;MACtEF,SAAS,EAAAA;KACV,CAAC;IAEFP,KAAI,CAACa,KAAK,GAAG;MACXD,MAAM,EAAAA;KACP;;EACH;EAEOhB,cAAA,CAAAkB,SAAA,CAAAC,MAAM,GAAb;IACQ,IAAAb,EAAA,GAA2B,IAAI,CAACH,KAAK;MAAnCiB,QAAQ,GAAAd,EAAA,CAAAc,QAAA;MAAEC,UAAU,GAAAf,EAAA,CAAAe,UAAe;IACnC,IAAAL,MAAM,GAAK,IAAI,CAACC,KAAK,CAAAD,MAAf;IAEd,OAAOtB,KAAK,CAAC4B,cAAc,CAACF,QAAQ,CAAC,GACjC1B,KAAA,CAAA6B,aAAA,CAACzB,cAAc;MAACkB,MAAM,EAAEA;IAAM,GAC3BtB,KAAK,CAAC8B,YAAY,CAAC9B,KAAK,CAAC+B,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC,EAAAO,QAAA,KAAON,UAAU,EAAG,CACtD,GACjB,IAAI;EACV,CAAC;EAEMrB,cAAA,CAAAkB,SAAA,CAAAU,oBAAoB,GAA3B;IACE;IACA;IACA,IAAI,CAACX,KAAK,CAACD,MAAM,CAACa,IAAI,EAAE;EAC1B,CAAC;EA7Ca7B,cAAA,CAAA8B,YAAY,GAAwB;IAChDtB,WAAW,EAAE;GACd;EA4CH,OAAAR,cAAC;CAAA,CAlDmCN,KAAK,CAACqC,SAAS;SAAtC/B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}