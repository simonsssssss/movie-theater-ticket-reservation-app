{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\IdeaProjects\\\\movie-theater-ticket-reservation\\\\frontend\\\\src\\\\pages\\\\Movies.jsx\",\n  _s = $RefreshSig$();\nimport '../styles/Movies.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [dateIsSelected, setDateIsSelected] = useState(false);\n  const [datePickerValue, setDatePickerValue] = useState(null);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/movies', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            screening_time: datePickerValue\n          })\n        });\n        const data = await response.json();\n        setMovies(data);\n      } catch (error) {\n        console.error('Error fetching movies');\n      }\n    };\n    fetchMovies();\n  }, [datePickerValue]);\n  const date = new Date();\n  const currentDate = date.toJSON();\n  const currentDateWithoutTime = currentDate.split(\"T\")[0];\n  date.setMonth(date.getMonth() + 1);\n  const maxPickerDate = date.toJSON().split(\"T\")[0];\n  const handleChange = e => {\n    const newDate = e.target.value;\n    if (!newDate || !newDate.trim()) {\n      setDateIsSelected(false);\n    } else {\n      setDateIsSelected(true);\n      setDatePickerValue(newDate);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-repertoire\",\n    children: [dateIsSelected ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-2\",\n      id: \"movie-repertoire-h1\",\n      children: [\"Repertoire For: \", datePickerValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-2\",\n      id: \"movie-repertoire-h1\",\n      children: \"Select Date To Show Repertoire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-picker\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"title\",\n        id: \"date-picker\",\n        min: currentDateWithoutTime,\n        max: maxPickerDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), dateIsSelected ? movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        id: \"movies-list-item\",\n        children: [movie.title_, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 56\n        }, this), movie.genre, \"| \", movie.duration_in_minutes, \" min | \", movie.format_]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag is-white\",\n      id: \"no-date-selected-info\",\n      children: \"No movies for selected date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag is-white\",\n      id: \"no-date-selected-info\",\n      children: \"No date selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Movies, \"+zaHNgA8gx8IFd2HPa3tdkFK2K4=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Movies","_s","dateIsSelected","setDateIsSelected","datePickerValue","setDatePickerValue","movies","setMovies","fetchMovies","response","fetch","method","headers","body","JSON","stringify","screening_time","data","json","error","console","date","Date","currentDate","toJSON","currentDateWithoutTime","split","setMonth","getMonth","maxPickerDate","handleChange","e","newDate","target","value","trim","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","length","map","movie","index","title_","genre","duration_in_minutes","format_","_c","$RefreshReg$"],"sources":["C:/Users/Simon/IdeaProjects/movie-theater-ticket-reservation/frontend/src/pages/Movies.jsx"],"sourcesContent":["import '../styles/Movies.css';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Movies() {\r\n    const [dateIsSelected, setDateIsSelected] = useState(false);\r\n    const [datePickerValue, setDatePickerValue] = useState(null);\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:4000/movies', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ screening_time: datePickerValue }),\r\n                });\r\n                const data = await response.json();\r\n                setMovies(data);\r\n            } catch (error) {\r\n                console.error('Error fetching movies');\r\n            }\r\n        };\r\n        fetchMovies();\r\n    }, [datePickerValue]);\r\n    const date = new Date();\r\n    const currentDate = date.toJSON();\r\n    const currentDateWithoutTime = currentDate.split(\"T\")[0];\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxPickerDate = date.toJSON().split(\"T\")[0];\r\n    const handleChange = (e) => {\r\n        const newDate = e.target.value;\r\n        if(!newDate || !newDate.trim()) {\r\n            setDateIsSelected(false);\r\n        }\r\n        else {\r\n            setDateIsSelected(true);\r\n            setDatePickerValue(newDate);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"movie-repertoire\">\r\n            {\r\n                dateIsSelected ? (\r\n                    <h1 className=\"title is-2\" id=\"movie-repertoire-h1\">Repertoire For: {datePickerValue}</h1>\r\n                ) : (\r\n                    <h1 className=\"title is-2\" id=\"movie-repertoire-h1\">Select Date To Show Repertoire</h1>\r\n                )\r\n            }\r\n            <div className=\"date-picker\">\r\n                <input type=\"date\" className=\"title\" id=\"date-picker\" min={currentDateWithoutTime} max={maxPickerDate} onChange={handleChange}></input>\r\n            </div>\r\n            {\r\n                dateIsSelected ? (\r\n                    movies.length > 0 ? (\r\n                        <div className=\"movies-list\">\r\n                            {\r\n                                movies.map((movie, index) => (\r\n                                    <div className=\"box\" id=\"movies-list-item\" key={index}>\r\n                                        {movie.title_} <br />\r\n                                        {movie.genre}\r\n                                         | {movie.duration_in_minutes} min\r\n                                        | {movie.format_}\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"tag is-white\" id=\"no-date-selected-info\">No movies for selected date</div>\r\n                    )\r\n                ) : (\r\n                    <div className=\"tag is-white\" id=\"no-date-selected-info\">No date selected</div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}