{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Observable } from \"../../../utilities/index.js\";\nimport { ApolloLink } from \"../../../link/core/index.js\";\nvar MockSubscriptionLink = /** @class */function (_super) {\n  __extends(MockSubscriptionLink, _super);\n  function MockSubscriptionLink() {\n    var _this = _super.call(this) || this;\n    _this.unsubscribers = [];\n    _this.setups = [];\n    _this.observers = [];\n    return _this;\n  }\n  MockSubscriptionLink.prototype.request = function (operation) {\n    var _this = this;\n    this.operation = operation;\n    return new Observable(function (observer) {\n      _this.setups.forEach(function (x) {\n        return x();\n      });\n      _this.observers.push(observer);\n      return function () {\n        _this.unsubscribers.forEach(function (x) {\n          return x();\n        });\n      };\n    });\n  };\n  MockSubscriptionLink.prototype.simulateResult = function (result, complete) {\n    var _this = this;\n    if (complete === void 0) {\n      complete = false;\n    }\n    setTimeout(function () {\n      var observers = _this.observers;\n      if (!observers.length) throw new Error(\"subscription torn down\");\n      observers.forEach(function (observer) {\n        if (result.result && observer.next) observer.next(result.result);\n        if (result.error && observer.error) observer.error(result.error);\n        if (complete && observer.complete) observer.complete();\n      });\n    }, result.delay || 0);\n  };\n  MockSubscriptionLink.prototype.simulateComplete = function () {\n    var observers = this.observers;\n    if (!observers.length) throw new Error(\"subscription torn down\");\n    observers.forEach(function (observer) {\n      if (observer.complete) observer.complete();\n    });\n  };\n  MockSubscriptionLink.prototype.onSetup = function (listener) {\n    this.setups = this.setups.concat([listener]);\n  };\n  MockSubscriptionLink.prototype.onUnsubscribe = function (listener) {\n    this.unsubscribers = this.unsubscribers.concat([listener]);\n  };\n  return MockSubscriptionLink;\n}(ApolloLink);\nexport { MockSubscriptionLink };\nexport function mockObservableLink() {\n  return new MockSubscriptionLink();\n}","map":{"version":3,"names":["Observable","ApolloLink","MockSubscriptionLink","_super","__extends","_this","call","unsubscribers","setups","observers","prototype","request","operation","observer","forEach","x","push","simulateResult","result","complete","setTimeout","length","Error","next","error","delay","simulateComplete","onSetup","listener","concat","onUnsubscribe","mockObservableLink"],"sources":["C:\\Users\\Simon\\IdeaProjects\\movie-theater-ticket-reservation\\frontend\\node_modules\\@apollo\\src\\testing\\core\\mocking\\mockSubscriptionLink.ts"],"sourcesContent":["import { Observable } from \"../../../utilities/index.js\";\nimport type { FetchResult, Operation } from \"../../../link/core/index.js\";\nimport { ApolloLink } from \"../../../link/core/index.js\";\n\nexport interface MockedSubscription {\n  request: Operation;\n}\n\nexport interface MockedSubscriptionResult {\n  result?: FetchResult;\n  error?: Error;\n  delay?: number;\n}\n\nexport class MockSubscriptionLink extends ApolloLink {\n  public unsubscribers: any[] = [];\n  public setups: any[] = [];\n  public operation?: Operation;\n\n  private observers: any[] = [];\n\n  constructor() {\n    super();\n  }\n\n  public request(operation: Operation) {\n    this.operation = operation;\n    return new Observable<FetchResult>((observer) => {\n      this.setups.forEach((x) => x());\n      this.observers.push(observer);\n      return () => {\n        this.unsubscribers.forEach((x) => x());\n      };\n    });\n  }\n\n  public simulateResult(result: MockedSubscriptionResult, complete = false) {\n    setTimeout(() => {\n      const { observers } = this;\n      if (!observers.length) throw new Error(\"subscription torn down\");\n      observers.forEach((observer) => {\n        if (result.result && observer.next) observer.next(result.result);\n        if (result.error && observer.error) observer.error(result.error);\n        if (complete && observer.complete) observer.complete();\n      });\n    }, result.delay || 0);\n  }\n\n  public simulateComplete() {\n    const { observers } = this;\n    if (!observers.length) throw new Error(\"subscription torn down\");\n    observers.forEach((observer) => {\n      if (observer.complete) observer.complete();\n    });\n  }\n\n  public onSetup(listener: any): void {\n    this.setups = this.setups.concat([listener]);\n  }\n\n  public onUnsubscribe(listener: any): void {\n    this.unsubscribers = this.unsubscribers.concat([listener]);\n  }\n}\n\nexport function mockObservableLink(): MockSubscriptionLink {\n  return new MockSubscriptionLink();\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,6BAA6B;AAExD,SAASC,UAAU,QAAQ,6BAA6B;AAYxD,IAAAC,oBAAA,0BAAAC,MAAA;EAA0CC,SAAA,CAAAF,oBAAA,EAAAC,MAAA;EAOxC,SAAAD,qBAAA;IACE,IAAAG,KAAA,GAAAF,MAAK,CAAAG,IAAA,MAAE;IAPFD,KAAA,CAAAE,aAAa,GAAU,EAAE;IACzBF,KAAA,CAAAG,MAAM,GAAU,EAAE;IAGjBH,KAAA,CAAAI,SAAS,GAAU,EAAE;;EAI7B;EAEOP,oBAAA,CAAAQ,SAAA,CAAAC,OAAO,GAAd,UAAeC,SAAoB;IAAnC,IAAAP,KAAA;IACE,IAAI,CAACO,SAAS,GAAGA,SAAS;IAC1B,OAAO,IAAIZ,UAAU,CAAc,UAACa,QAAQ;MAC1CR,KAAI,CAACG,MAAM,CAACM,OAAO,CAAC,UAACC,CAAC;QAAK,OAAAA,CAAC,EAAE;MAAH,CAAG,CAAC;MAC/BV,KAAI,CAACI,SAAS,CAACO,IAAI,CAACH,QAAQ,CAAC;MAC7B,OAAO;QACLR,KAAI,CAACE,aAAa,CAACO,OAAO,CAAC,UAACC,CAAC;UAAK,OAAAA,CAAC,EAAE;QAAH,CAAG,CAAC;MACxC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEMb,oBAAA,CAAAQ,SAAA,CAAAO,cAAc,GAArB,UAAsBC,MAAgC,EAAEC,QAAgB;IAAxE,IAAAd,KAAA;IAAwD,IAAAc,QAAA;MAAAA,QAAA,QAAgB;IAAA;IACtEC,UAAU,CAAC;MACD,IAAAX,SAAS,GAAKJ,KAAI,CAAAI,SAAT;MACjB,IAAI,CAACA,SAAS,CAACY,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAChEb,SAAS,CAACK,OAAO,CAAC,UAACD,QAAQ;QACzB,IAAIK,MAAM,CAACA,MAAM,IAAIL,QAAQ,CAACU,IAAI,EAAEV,QAAQ,CAACU,IAAI,CAACL,MAAM,CAACA,MAAM,CAAC;QAChE,IAAIA,MAAM,CAACM,KAAK,IAAIX,QAAQ,CAACW,KAAK,EAAEX,QAAQ,CAACW,KAAK,CAACN,MAAM,CAACM,KAAK,CAAC;QAChE,IAAIL,QAAQ,IAAIN,QAAQ,CAACM,QAAQ,EAAEN,QAAQ,CAACM,QAAQ,EAAE;MACxD,CAAC,CAAC;IACJ,CAAC,EAAED,MAAM,CAACO,KAAK,IAAI,CAAC,CAAC;EACvB,CAAC;EAEMvB,oBAAA,CAAAQ,SAAA,CAAAgB,gBAAgB,GAAvB;IACU,IAAAjB,SAAS,GAAK,IAAI,CAAAA,SAAT;IACjB,IAAI,CAACA,SAAS,CAACY,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAChEb,SAAS,CAACK,OAAO,CAAC,UAACD,QAAQ;MACzB,IAAIA,QAAQ,CAACM,QAAQ,EAAEN,QAAQ,CAACM,QAAQ,EAAE;IAC5C,CAAC,CAAC;EACJ,CAAC;EAEMjB,oBAAA,CAAAQ,SAAA,CAAAiB,OAAO,GAAd,UAAeC,QAAa;IAC1B,IAAI,CAACpB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqB,MAAM,CAAC,CAACD,QAAQ,CAAC,CAAC;EAC9C,CAAC;EAEM1B,oBAAA,CAAAQ,SAAA,CAAAoB,aAAa,GAApB,UAAqBF,QAAa;IAChC,IAAI,CAACrB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACsB,MAAM,CAAC,CAACD,QAAQ,CAAC,CAAC;EAC5D,CAAC;EACH,OAAA1B,oBAAC;AAAD,CAAC,CAjDyCD,UAAU;;AAmDpD,OAAM,SAAU8B,kBAAkBA,CAAA;EAChC,OAAO,IAAI7B,oBAAoB,EAAE;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}